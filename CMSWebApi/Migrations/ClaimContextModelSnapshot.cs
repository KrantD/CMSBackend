// <auto-generated />
using System;
using CMSWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMSWebApi.Migrations
{
    [DbContext(typeof(ClaimContext))]
    partial class ClaimContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CMSWebApi.Models.Claim", b =>
                {
                    b.Property<int?>("cId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("cId"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ClaimDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cId");

                    b.ToTable("claim");

                    b.HasData(
                        new
                        {
                            cId = 1,
                            Amount = 20000.0,
                            ClaimDate = "22-10-2022"
                        },
                        new
                        {
                            cId = 2,
                            Amount = 30000.0,
                            ClaimDate = "23-10-2022"
                        });
                });

            modelBuilder.Entity("CMSWebApi.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Key")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("members");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            Address = "Ahmedabad",
                            Country = "India",
                            Dob = "2-10-1869",
                            EmailId = "Babita@123",
                            Key = new byte[] { 146, 153, 174, 131, 180, 171, 40, 53, 189, 101, 141, 58, 109, 185, 69, 237, 113, 43, 29, 69, 121, 116, 35, 84, 125, 73, 233, 199, 170, 198, 208, 128, 44, 194, 244, 53, 224, 178, 77, 8, 164, 102, 102, 58, 27, 49, 165, 227, 15, 33, 246, 251, 217, 131, 29, 179, 52, 103, 160, 223, 41, 75, 138, 161, 137, 52, 13, 209, 118, 232, 22, 38, 80, 167, 13, 81, 226, 105, 141, 1, 249, 117, 113, 145, 227, 78, 157, 239, 166, 56, 40, 109, 243, 77, 172, 78, 161, 59, 80, 208, 37, 100, 88, 95, 243, 117, 197, 124, 96, 171, 113, 97, 242, 216, 124, 189, 146, 90, 213, 62, 165, 194, 138, 104, 173, 79, 77, 204 },
                            Password = "Babita",
                            PasswordHash = new byte[] { 196, 24, 221, 126, 58, 148, 87, 211, 253, 67, 208, 104, 238, 122, 106, 96, 74, 240, 13, 200, 206, 253, 238, 75, 114, 143, 204, 210, 171, 171, 6, 105, 224, 214, 96, 172, 28, 125, 152, 109, 109, 210, 45, 42, 57, 83, 216, 66, 70, 248, 160, 248, 41, 103, 118, 40, 122, 37, 193, 151, 250, 71, 128, 45 },
                            PhoneNumber = "66666666",
                            State = "Gujrat",
                            UserName = "Jethalal"
                        },
                        new
                        {
                            Id = 102,
                            Address = "Mumbai",
                            Country = "India",
                            Dob = "3-10-1868",
                            EmailId = "Madhavi@123",
                            Key = new byte[] { 146, 153, 174, 131, 180, 171, 40, 53, 189, 101, 141, 58, 109, 185, 69, 237, 113, 43, 29, 69, 121, 116, 35, 84, 125, 73, 233, 199, 170, 198, 208, 128, 44, 194, 244, 53, 224, 178, 77, 8, 164, 102, 102, 58, 27, 49, 165, 227, 15, 33, 246, 251, 217, 131, 29, 179, 52, 103, 160, 223, 41, 75, 138, 161, 137, 52, 13, 209, 118, 232, 22, 38, 80, 167, 13, 81, 226, 105, 141, 1, 249, 117, 113, 145, 227, 78, 157, 239, 166, 56, 40, 109, 243, 77, 172, 78, 161, 59, 80, 208, 37, 100, 88, 95, 243, 117, 197, 124, 96, 171, 113, 97, 242, 216, 124, 189, 146, 90, 213, 62, 165, 194, 138, 104, 173, 79, 77, 204 },
                            Password = "Madhavi",
                            PasswordHash = new byte[] { 154, 100, 145, 131, 82, 93, 7, 41, 34, 160, 142, 64, 248, 211, 59, 136, 118, 126, 160, 36, 34, 14, 134, 160, 36, 198, 22, 54, 11, 64, 210, 169, 16, 21, 0, 6, 173, 58, 122, 110, 42, 107, 234, 142, 180, 19, 215, 80, 85, 135, 253, 127, 230, 228, 226, 246, 149, 36, 182, 95, 158, 62, 255, 27 },
                            PhoneNumber = "66666667",
                            State = "Maharashtra",
                            UserName = "Bhide"
                        });
                });

            modelBuilder.Entity("CMSWebApi.Models.MemberPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CId")
                        .HasColumnType("int");

                    b.Property<int>("MId")
                        .HasColumnType("int");

                    b.Property<int>("PId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CId");

                    b.HasIndex("MId");

                    b.HasIndex("PId");

                    b.ToTable("memberPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CId = 1,
                            MId = 101,
                            PId = 1
                        },
                        new
                        {
                            Id = 2,
                            CId = 1,
                            MId = 102,
                            PId = 2
                        });
                });

            modelBuilder.Entity("CMSWebApi.Models.Plan", b =>
                {
                    b.Property<int>("pId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pId"), 1L, 1);

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pId");

                    b.ToTable("plans");

                    b.HasData(
                        new
                        {
                            pId = 1,
                            Amount = "1000000",
                            Duration = "1 years",
                            pName = "Jeevan Raksha Yojna"
                        },
                        new
                        {
                            pId = 2,
                            Amount = "200000",
                            Duration = "5 years",
                            pName = "Health Security Plan "
                        });
                });

            modelBuilder.Entity("CMSWebApi.Models.MemberPlan", b =>
                {
                    b.HasOne("CMSWebApi.Models.Claim", "Claims")
                        .WithMany("MemberPlans")
                        .HasForeignKey("CId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMSWebApi.Models.Member", "Member")
                        .WithMany("MemberPlans")
                        .HasForeignKey("MId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CMSWebApi.Models.Plan", "Plan")
                        .WithMany("MemberPlans")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claims");

                    b.Navigation("Member");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("CMSWebApi.Models.Claim", b =>
                {
                    b.Navigation("MemberPlans");
                });

            modelBuilder.Entity("CMSWebApi.Models.Member", b =>
                {
                    b.Navigation("MemberPlans");
                });

            modelBuilder.Entity("CMSWebApi.Models.Plan", b =>
                {
                    b.Navigation("MemberPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
